generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model CategoryJob {
    id   String @id @default(cuid())
    name String
    Job  Job[]
}

model Company {
    id                 String               @id @default(cuid())
    name               String
    password           String
    email              String               @unique
    CompanySocialMedia CompanySocialMedia[]
    CompanyTeam        CompanyTeam[]
    CompanyOverview    CompanyOverview[]
    Job                Job[]
}

model CompanySocialMedia {
    id        String   @id @default(cuid())
    instagram String
    twitter   String
    facebook  String
    linkedin  String
    youtube   String
    companyId String?
    company   Company? @relation(fields: [companyId], references: [id])
}

model CompanyTeam {
    id        String   @id @default(cuid())
    name      String
    position  String
    instagram String
    linkedin  String
    companyId String?
    company   Company? @relation(fields: [companyId], references: [id])
}

model CompanyOverview {
    id          String   @id @default(cuid())
    image       String
    website     String
    name        String
    location    String
    employee    String
    industry    String
    dateFounded DateTime
    techStack   String[]
    description String
    companyId   String?
    company     Company? @relation(fields: [companyId], references: [id])
}

model Job {
    id             String       @id @default(cuid())
    roles          String
    datePosted     DateTime     @default(now())
    dueDate        DateTime
    jobType        String
    applicants     Int
    needs          Int
    salaryForm     String
    SalaryTo       String
    requiredSkills String[]
    description    String
    responsibility String
    whoYouAre      String
    niceToHave     String
    benefits       Json
    categoryId     String?
    categoryJob    CategoryJob? @relation(fields: [categoryId], references: [id])
    companyId      String?
    company        Company?     @relation(fields: [companyId], references: [id])
    Applicant      Applicant[]
}

model User {
    id        String      @id @default(cuid())
    name      String
    password  String
    email     String      @unique
    Applicant Applicant[]
}

model Applicant {
    id               String  @id @default(cuid())
    userId           String?
    user             User?   @relation(fields: [userId], references: [id])
    jobId            String?
    job              Job?    @relation(fields: [jobId], references: [id])
    previousJobTitle String
    phone            String
    linkedin         String
    portfolio        String
    coverLetter      String
    resume           String
}
